#!/bin/zsh
#─────────────────────────────────────────────────────────────────
# Initialize a new share
#
# usage:   init-share [config file]
#
# author:  Ludovic Vigouroux <ludo@mundoludo.fr>
# created: December 2011
# Free to use, modify and redistribute.
#─────────────────────────────────────────────────────────────────

usage () {
	print "Please indicate a config_file"
	exit 1
}

#─────────────────────────────────────────────────────────────────
# Create group if needed
#─────────────────────────────────────────────────────────────────
create_group () {
	if ! grep -q $group_name /etc/group; then
		[[ -z $group_id ]] &&
			print -- "Failed to retrieve group_id. Aborting" &&
			exit 1
		groupadd --gid $group_id $group_name
	fi
}

#─────────────────────────────────────────────────────────────────
# Create group if needed (on a mac)
#─────────────────────────────────────────────────────────────────
create_group_darwin () {
	if dscl . list /groups | grep -q $group_name ; then
		print -- "share group: $fg[blue]${group_name}$fg[default]"
	else
		print -- "Creating share group\
			$fg[blue]${group_name}$fg[default]"
		dscl . create /groups/$group_name gid $group_id
	fi
}

#─────────────────────────────────────────────────────────────────
# Add user to group if needed
#─────────────────────────────────────────────────────────────────
add_user () {
	if ! groups $owner | grep -q $group_name; then
		gpasswd -a $owner $group_name || exit 1
	fi
}

#─────────────────────────────────────────────────────────────────
# Add user to group if needed (on a mac)
#─────────────────────────────────────────────────────────────────
add_user_darwin () {
	if ! groups $owner | grep -q $group_name; then
		dseditgroup -o edit -a $owner -t user $group_name
	fi
}

#─────────────────────────────────────────────────────────────────
# Create share if needed
#─────────────────────────────────────────────────────────────────
create_share () {
	if ! [[ -d $share ]]; then
		mkdir -p $share || exit 1
		chmod 2775 $share
		chgrp $group_name $share
	fi
}

create_directories () {
	perms=2770
	. $script_location/init-dirs $config_share
}

#─────────────────────────────────────────────────────────────────
# Install new share with values from config
#─────────────────────────────────────────────────────────────────
install_share () {

	# clean share values
	share=$root_location
	[[ -z $share ]] &&
		print -- "Failed to retrieve share location. Aborting" &&
		exit 1
	owner=$owner
	[[ -z $owner ]] &&
		print -- "Failed to retrieve owner of directories. Aborting" &&
		exit 1
	group_name=$group_name
	[[ -z $group_name ]] &&
		print -- "Failed to retrieve group_name. Aborting" &&
		exit 1
	groupid=$group_id
  if [[ $OSTYPE == darwin* ]]; then
	  create_group_darwin
	  add_user_darwin
	else
	  create_group
	  add_user
	fi
	create_share
	create_directories
}

#─────────────────────────────────────────────────────────────────
# Main
#─────────────────────────────────────────────────────────────────
[[ $# -eq 0 ]] && usage
config_share=$1

# retrieve this file location
pushd "$(dirname ${0})"
script_location=$(pwd)
popd

# read config
. $script_location/load-config local $*
# load directories path
. $script_location/traverse-tree -q $*

# Create shared directory with group and permissions accordingly
# to a config file
install_share

## vim: set filetype=zsh:
