#─────────────────────────────────────────────────────────────────
# Build a directory tree
#
# usage:  source traverse-tree environment config
#
# created: 2011-05-30
# author:  Ludovic Vigouroux <ludo@mundoludo.fr>
#─────────────────────────────────────────────────────────────────

#─────────────────────────────────────────────────────────────────
# Retrieve directories hierarchy configuration
#─────────────────────────────────────────────────────────────────
parse_config_tree () {
	translate_config ${envsection}$env $trenv $conf
	rootpath=$root_location
	rootname=$root_name
	perms=$permissions
	translate_config $namesection $trname $conf
	translate_config $nodesection $trnode $conf
	translate_config ${masksection}$env $trmask $conf
}

#─────────────────────────────────────────────────────────────────
# Initialize values for root of the tree
# and launch tree traversal
#─────────────────────────────────────────────────────────────────
init_tree () {
	[[ -z $rootname ]] && rootname=${rootpath:t}
  treepaths[$rootname]=$rootpath
  treepathslabel[$rootlabel]=$rootpath

  traverse_tree $rootlabel $rootpath
}

#─────────────────────────────────────────────────────────────────
# Traverse directory tree
#
# ARGUMENT 1: label of the root
# ARGUMENT 2: path of the root
#─────────────────────────────────────────────────────────────────
traverse_tree() {
  typeset level=$1
  typeset localpath=$2

  # level is not a leaf and contain an array with childrens labels
  if [[ -n ${(P)level} && "array" == ${$(typeset +m $level)[1]} ]] ; then
    for label in ${(P)level}; do
      # Record path of the tree
      localname=${name[$label]:-$label}
      completepath=${localpath}/$localname
      treepaths[$localname]=$completepath
      treepathslabel[$label]=$completepath

      # Continue to traverse tree
      traverse_tree $label $completepath
    done
   fi
}

#─────────────────────────────────────────────────────────────────
# Load directories hierarchy
#─────────────────────────────────────────────────────────────────
load-tree() {
	# arguments
	env=$1
	conf=$2
	rootlabel=$3
	[[ -z $rootlabel ]] && rootlabel=root

	# parameters
	typeset -Ag name           # directories names
	typeset -Ag treepaths      # directories paths with name as key
	typeset -Ag treepathslabel # directories paths with label as key

	namesection=names
	trname='{print "name["$1"]="$2}'

	nodesection=nodes
	trnode='{gsub(","," "); print $1"=("$2")"}'

	masksection=mask
	trmask='{gsub(",","|"); print $1"=(${"$1":#("$2")})"}'

	envsection=env
	trenv='{print $1"="$2}'

	# retrieve tree config
	parse_config_tree

	# build directories tree
	init_tree
}

# vim: set filetype=zsh:
