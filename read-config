#!/bin/zsh
#─────────────────────────────────────────────────────────────────
# Translate values in a config section in zsh parameters
#
# author:  Ludovic Vigouroux <ludo@mundoludo.fr>
# created: 2013-01-13
# Free to use, modify and redistribute.
#─────────────────────────────────────────────────────────────────

local defaultname="initializor.cfg"
usage () {
	print "usage: read-config section config_file"
	exit 1
}

# some checks
[[ $# -eq 0 ]] && usage
config=$*[$#]
if [[ ! -e $config ]] || [[ -x $config ]]; then
	if [[ -e $defaultname ]]; then
		config=$defaultname
	else
		if [[ -e $HOME/.$defaultname ]]; then
			config=$HOME/.$defaultname
		else
			print -- "no config file found" &&\
				exit 1
		fi
	fi
	last_section=$#
else
	last_section=$(($# - 1))
fi

# show section values
for section in $*[1,$last_section]; do

	# check section
	if grep -qE '^\[ ?'$section' ?\]' $config; then
		# retrieve array type of section
		not_simple=$(awk '/^\[/ {p=0}; /=/ && p {print "true"; p=0} /^\[ ?'$section' ?\]/ {p=1};' $config)
		# simple array
		if [[ -z $not_simple ]]; then
			print -- $section"=()"
			awk -F = '/^\[/ {p=0};/^[a-zA-Z]/ && p {gsub(","," "); print "'$section'=($'$section' "$1")"}; /^\[ ?'$section' ?\]/ {p=1};' $config
		else
			array_list=$(awk '/^\[/ {p=0}; /^[a-zA-Z]*=.*,/ && p {print "true"; p=0} /^\[ ?'$section' ?\]/ {p=1};' $config)
			# list of arrays
			if [[ -n $array_list ]]; then
				awk -F = '/^\[/ {p=0};/^[a-zA-Z]/ && p {gsub(","," "); print $1"=("$2")"}; /^\[ ?'$section' ?\]/ {p=1};' $config
			# associative array
			else
				print -- "typeset -Ag "$section
				awk -F = '/^\[/ {p=0}; /^[a-zA-Z]/ && p {print "'$section'["$1"]="$2}; /^\[ ?'$section' ?\]/ {p=1};' $config
			fi
		fi
	fi

done

# vim: set filetype=zsh:
