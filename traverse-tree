#!/bin/zsh
#─────────────────────────────────────────────────────────────────
# Build a directory tree
#
# usage:  source traverse-tree environment config
#
# created: 2011-05-30
# author:  Ludovic Vigouroux <ludo@mundoludo.fr>
#─────────────────────────────────────────────────────────────────

usage () {
  print "traverse-tree [-v] config_file"
  exit
}

#─────────────────────────────────────────────────────────────────
# Retrieve directories hierarchy configuration
#─────────────────────────────────────────────────────────────────
parse_tree_config () {
  # set variables from config file
  local IFS=""
  for line in \
    $($script_location/read-config names nodes local $config)
  do
    eval $line
  done

  # aliases
  rootname=$root_name
  rootpath=$root_location
  rootlabel=$root_label
  # default values
  [[ -z $rootname ]] && rootname=${rootpath:t}
  [[ -z $rootlabel ]] && rootlabel=root
}

#─────────────────────────────────────────────────────────────────
# Launch three traversal
#─────────────────────────────────────────────────────────────────
init_tree () {
  # parameters
  typeset -Ag treepaths      # directories paths
  treepaths[$rootname]=$rootpath

  # go !
  traverse_tree $rootlabel $rootpath
}

#─────────────────────────────────────────────────────────────────
# Traverse directory tree
#
# ARGUMENT 1: label of the root
# ARGUMENT 2: path of the root
#─────────────────────────────────────────────────────────────────
traverse_tree() {
  typeset level=$1
  typeset localpath=$2

  # level is not a leaf and contain an array with childrens labels
  if [[ -n ${(P)level} && "array" == ${$(typeset +m $level)[1]} ]] ; then
    for label in ${(P)level}; do
			# do not record ignored directories
			if [[ -z ${(M)ignore:#${label}} ]]; then
				# Record path of the tree
				localname=${names[$label]:-$label}
				completepath=${localpath}/$localname
				treepaths[$localname]=$completepath

        # Continue to traverse tree
        traverse_tree $label $completepath
			fi
    done
   fi
}

#─────────────────────────────────────────────────────────────────
# Load directories hierarchy
#─────────────────────────────────────────────────────────────────
[[ ${#${*:#-v}[*]} -ne 1 ]] && usage
config=$*[$#]
[[ ! -e $config ]] &&\
  print -- "config file \"$config\" not found" &&\
  exit 1

# retrieve this file location
pushd "$(dirname ${0})"
script_location=$(pwd)
popd

# retrieve tree config
parse_tree_config

# build directories tree
init_tree

# show tree if verbose is set
local opt
while getopts v opt; do
  case $opt in
    (v)
      for dirpath in ${(ov)treepaths}; do
        print $dirpath
      done
      ;;
  esac
done

# vim: set filetype=zsh:
