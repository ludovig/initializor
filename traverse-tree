#!/bin/zsh
#─────────────────────────────────────────────────────────────────
# Build a directory tree
#
# created: 2011-05-30
# author:  Ludovic Vigouroux <ludo@mundoludo.fr>
#─────────────────────────────────────────────────────────────────

usage () {
  print "usage: traverse-tree [-v] config_file"
  exit 1
}

#─────────────────────────────────────────────────────────────────
# Retrieve directories hierarchy configuration
#─────────────────────────────────────────────────────────────────
parse_tree_config () {
	# read config command
	. $script_location/read-config-safe names nodes local $*

  # aliases
  rootname=$root_name
  rootpath=$root_location
  rootlabel=$root_label
  # default values
  [[ -z $rootname ]] && rootname=${rootpath:t}
  [[ -z $rootlabel ]] && rootlabel=root
}

#─────────────────────────────────────────────────────────────────
# Launch three traversal
#─────────────────────────────────────────────────────────────────
init_tree () {
  # parameters
  typeset -Ag treepaths      # directories paths
  typeset -Ag treepathslabel # directories paths
  treepaths[$rootname]=$rootpath
  treepathslabel[$rootlabel]=$rootpath

  # go !
  traverse_tree $rootlabel $rootpath
}

#─────────────────────────────────────────────────────────────────
# Traverse directory tree
#
# ARGUMENT 1: label of the root
# ARGUMENT 2: path of the root
#─────────────────────────────────────────────────────────────────
traverse_tree() {
  typeset level=$1
  typeset localpath=$2

  # level is not a leaf and contain an array with childrens labels
  if [[ -n ${(P)level} && "array" == ${$(typeset +m $level)[1]} ]] ; then
    for label in ${(P)level}; do
      # do not record ignored directories
      if [[ -z ${(M)ignore:#${label}} ]]; then
        # Record path of the tree
        localname=${names[$label]:-$label}
        completepath=${localpath}/$localname
        treepaths[$localname]=$completepath
        treepathslabel[$label]=$completepath

        # Continue to traverse tree
        traverse_tree $label $completepath
      fi
    done
   fi
}

#─────────────────────────────────────────────────────────────────
# Load directories hierarchy
#─────────────────────────────────────────────────────────────────
# retrieve this file location
pushd "$(dirname ${0})"
script_location=$(pwd)
popd

# retrieve tree config
parse_tree_config $*

# build directories tree
init_tree

quiet=false
local opt;
while getopts q opt; do
  case $opt in
    (q)
      quiet=true
      ;;
    (\?)
      print Bad option, aborting.
      return 1
      ;;
  esac
done

if ! $quiet; then
  for dirpath in ${(ov)treepaths}; do
    print $dirpath
  done
fi
# vim: set filetype=zsh:
